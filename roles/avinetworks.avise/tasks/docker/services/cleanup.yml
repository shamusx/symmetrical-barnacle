---
# Since we use notify, we may not even need this anymore...but keeping it
# for future reference
#
# - name: Avi SE | Docker | Services | Compare docker run parameters
#   set_fact:
#     docker_run_changed: "{{ existing_run_params != se_docker_run_params }}"
#   when: se_existing_run_params is defined
#
# - name: Avi SE | Docker | Cleanup | Stop avise_watcher service
#   service: name=avise_watcher enabled=no state=stopped
#   when:
#     - se_old_service
#     - docker_run_changed
#     - avise_service_exists is defined
#     - ansible_service_mgr != "systemd"
#
# - name: Avi SE | Docker | Cleanup | Stop avise service
#   service: name=avise enabled=no state=stopped
#   when:
#     - docker_run_changed
#     - avise_service_exists is defined
- name: Avi SE | Docker | Get our desired docker image id.
  shell: "docker images -q {{ se_image }}"
  changed_when: false
  register: se_docker_image

- name: Avi SE | Docker | Get list of running se containers
  shell: "docker ps -q -f name=avise"
  changed_when: false
  register: se_running_containers

- name: Avi SE | Docker | Check if desired version is already running.
  shell: "docker ps -q -f ancestor={{ se_docker_image.stdout }}"
  changed_when: false
  register: se_desired_running

- name: Avi SE | Docker | Cleanup | Stop and Remove the container if it's not the desired version.
  shell: "docker stop {{ item }} && docker rm -f {{ item }}"
  notify: Avi SE | Services | Restart the avise service
  when:
    - item not in se_desired_running.stdout_lines
  with_items:
    - "{{ se_running_containers.stdout_lines }}"
