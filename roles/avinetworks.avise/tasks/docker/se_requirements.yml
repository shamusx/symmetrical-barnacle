---
# check system against minimum Avi SE | Requirements
- name: Avi SE | Requirements | Check for docker
  shell: "which docker"
  register: docker
  changed_when: false

- name: Avi SE | Requirements | Set facts
  set_fact:
    se_max_cores: "{{ ansible_processor_cores * ansible_processor_count }}"
    se_ansible_memtotal_gb: "{{ ansible_memtotal_mb / 1024 }}"

- name: Avi SE | Requirements | Validate Parameters
  assert:
    that:
      - "se_master_ctl_ip != None"
      - "ansible_memtotal_mb|int >= 1024"
      - "se_memory_gb|int <= se_ansible_memtotal_gb|int"
      - "se_memory_gb|int >= se_cores|int"
      - "se_max_cores|int >= 1"
      - "se_cores|int <= se_max_cores|int"
  when: not se_skip_requirements
- name: Check if avicontroller present on same host
  shell: "docker ps | grep avicontroller | wc -l"
  register: result
  changed_when: false
  become: true

- block:
    - name: if avicontroller present, set facts for cpu and memory
      shell: "docker exec avicontroller env | grep NUM_CPU | wc -l"
      register: c_cpu
    - shell: "docker exec avicontroller env | grep NUM_CPU | sed -e 's/=/ /g' | awk '{print $2}'"
      register: temp
      when: c_cpu.stdout|int == 1
    - set_fact:
        controller_cpu: "{{ temp.stdout }}"
    - shell: "docker exec avicontroller env | grep NUM_MEMG | wc -l"
      register: c_mem
    - shell: "docker exec avicontroller env | grep NUM_MEMG | sed -e 's/=/ /g' | awk '{print $2}'"
      register: temp
      when: c_mem.stdout|int == 1
    - set_fact:
        controller_mem: "{{ temp.stdout }}"
    - set_fact:
        se_cores: "{{ se_max_cores|int - controller_cpu|int }}"
      when: (se_cores|int + controller_cpu|int) > se_max_cores|int
    - assert:
        that:
          - "se_cores|int > 0"
    - set_fact:
        se_memory_gb: "{{ se_ansible_memtotal_gb|int - controller_mem|int }}"
      when: (se_memory_gb|int + controller_mem|int) > se_ansible_memtotal_gb|int
  when: result.stdout|int == 1
  become: true

- name: Avi SE | Requirements | Fresh install steps
  include: fresh_install.yml
  when: se_fresh_install

- name: Avi SE | Requirements | Create directories for service engine
  file: path="{{ item }}" state=directory mode=0755
  when: item != None
  with_items:
    - "{{ se_disk_path }}"
    - "{{ se_logs_disk_path }}"

- name: Avi SE | Requirements | Get disk space on service engine disk path
  shell: "df {{ se_disk_path }} -BG | grep -iv Used | awk '{print $4}' | sed s/G//g"
  changed_when: false
  register: se_disk_path_space
  when: se_disk_path != None

- name: Avi SE | Requirements | Get disk space on service engine logs disk path
  shell: "df {{ se_logs_disk_path }} -BG | grep -iv Used | awk '{print $4}' | sed s/G//g"
  register: se_logs_disk_path_space
  when: se_logs_disk_path != None

- name: Avi SE | Requirements | Check if there is enough space for service engine disk path
  assert:
    that:
      - se_disk_gb != None
      - se_disk_path_space.stdout > se_disk_gb
  when: se_disk_path != None and not se_skip_requirements

- name: Avi SE | Requirements | Check if there is enough space for service engine logs disk path
  assert:
    that:
      - se_logs_disk_gb != None
      - se_logs_disk_path_space.stdout > se_logs_disk_gb
  when: se_logs_disk_path != None and not se_skip_requirements
